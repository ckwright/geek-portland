/**
 * Mixin - Icon
 *
 * Icon stack:
 * 1. 00-config/_icons.scss (autogenerated)
 * 2. 10-base/_icons-base.scss (here)
 * 3. 30-global/_icons-application.scss (Generate default classes)
 */

@mixin font-icon-base() {
  font-family: $icon-font-base-name;
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


@mixin font-icon-replace($pseudo) {
  position: relative;
  right: 9999px;
  &:#{$pseudo} {
    position: absolute;
    height: 100%;
    text-align: center;
    top: 0;
    right: -9999px;
  }
}

/*
 * Main Icon mixin
 *
 * Can be called like @include icon($vars) { background: something; } using the
 * power of @content.
 */
@mixin icon(
  $icon: 'search', // just a default
  $pseudo: before,
  $text-replace: false,
  $size: inherit,
  $color: inherit,
  $block: false
) {
  &:#{$pseudo} {
    @include font-icon-base();
    content: map-get($font-icons, $icon);
    font-size: $size;
    color: $color;
    @content;
  }
  // Replace text with icon, like classic sprites
  @if $text-replace {
    @include font-icon-replace($pseudo);
  }
  // Get around fighting with line-heights
  @if $block {
    display: block;
  }
}

