<?php
/**
 * @file
 * Code for the adaptive_theme_helper feature.
 */

include_once 'adaptive_theme_helper.features.inc';

/**
 * Implements hook_block_view_MODULE_DELTA_alter().
 *
 * Removes title from footer menu in a reliable way.
 */
function adaptive_theme_helper_block_view_menu_menu_footer_menu_alter(&$data, $block) {
  unset($data['subject']);
}

/**
 * Implements hook_ds_fields_info().
 *
 * Styles author name.
 */
function adaptive_theme_helper_ds_fields_info($entity_type) {
  $fields['node']['posted_by'] = array(
    'title' => t('Posted by Author'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'function' => 'adaptive_theme_helper_ds_render_author_field',
    'properties' => array(
      'formatters' => array(
        'author' => t('Author'),
        'author_linked' => t('Author linked to profile')
      ),
    ),
  );

  return $fields;
}

/**
 * Function that adds 'Posted by' before the name of the author.
 */
function adaptive_theme_helper_ds_render_author_field ($field) {
  $author = ds_render_author_field($field);

  return t('Posted by !author', array('!author' => $author));
}


/**
 * Implement hook_field_formatter_info().
 *
 * Creates a new formatter for OG entity references.
 */
function adaptive_theme_helper_field_formatter_info() {
  return array(
    'at_list_default' => array(
      'label' => t('Separated OG audience list'),
      'field types' => array('entityreference'),
    ),
  );
}


/**
 * Implements hook_field_formatter_view().
 *
 * Adds the ability to show a csv og links.
 */
function adaptive_theme_helper_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  if ($display['type'] === 'at_list_default') {
    $display['type'] = 'og_list_default';
    $nodes = og_ui_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display);

    if (!empty($nodes)) {
      foreach ($nodes as $node) {
        $render[] = render($node);
      }

      $output = '';
      $output = implode(', ', $render);
      $element[0] = array('#theme' => 'item_list', '#items' => array($output));
    }
  }

  return $element;
}

/**
 * Implements hook_field_attach_view_alter().
 *
 * Hides the default h1 (preserves the meta title) if ds shows the title.
 */
function adaptive_theme_helper_field_attach_view_alter(&$build, $context) {
  $field_values = ds_get_field_settings('node', $build['#bundle'], 'full');

  if(isset($field_values['title'])) {
    drupal_static('hide_title', TRUE);
  }
}
