<?php
/**
 * @file
 * Defines module functions that create the nodes in a profile's info file.
 */
require_once (drupal_get_path('module', 'features') . '/features.export.inc');
require_once (drupal_get_path('module', 'node') . '/node.pages.inc');

/**
 * Function to save a node's data in a .info-friendly way.
 *
 * @todo Currently doesn't pull in menu or path variables, or any other items
 * added to the node through a node_form_alter().
 */
function node_make_helper_create_info_files($nodes) {
  $bad_keys = array(
    'original' => TRUE,
    'rdf_mapping' => TRUE,
    'vid' => TRUE,
    'data' => TRUE,
    'nid' => TRUE,
  );

  $nodes = node_load_multiple($nodes);
  foreach($nodes as $node) {
    // Load the form.
    $form_state = array();
    $form_state['build_info']['args'][0] = $node;
    $form =  drupal_build_form('page_node_form', $form_state);

    // Pull out $form['node'].
    $node = $form['#node'];
    entity_form_submit_build_entity('node', $node, $form, $form_state);
    if(isset($node->path['alias'])) {
      $node_array = json_decode(json_encode($node), true);

      node_make_helper_keys_clean($node_array, 'menu');

      $clean_node_array = array_diff_key($node_array, $bad_keys);

      $file_path = 'public://nodes-' . urlencode($node->path['alias']) . '.txt';
      if(file_save_data(str_replace('][][', '][0][', features_export_info($clean_node_array, array('nodes', $node->path['alias']))), $file_path, FILE_EXISTS_REPLACE)) {
        drupal_set_message(t('Info file saved at !location', array('!location' => l($file_path, file_create_url($file_path)))));
      }
    }
  }
}

/**
 * Implements hook_node_operations().
 */
function node_make_helper_node_operations() {
  $operations = array(
    'generate_make_info' => array(
      'label' => t('Generate make info file'),
      'callback' => 'node_make_helper_create_info_files',
    ),
  );
  return $operations;
}

/**
 * Cleans undesired keys from submenues.
 *
 * @todo I wanted to make this a hook so other modules could implement it.
 */
function node_make_helper_keys_clean(&$node_array, $key) {

  switch($key) {
    case 'menu':
      $bad_keys = array(
        'mlid' => TRUE,
        'depth' => TRUE,
        'parts' => TRUE,
        'link_path' => TRUE,
      );

      break;
  }

  $node_array[$key] = array_diff_key($node_array[$key], $bad_keys);
}
